name: Create release

on:
  push:
    tags:
      - 'v**'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # Checks previous build workflow and gets the version from publish.gradle
  check-build:
    name: Check build and publish versions
    runs-on: ubuntu-latest
    outputs:
      TAG_NAME: ${{ env.TAG_NAME }}
      VERSION: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Wait for build workflow to finish
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-regexp: 'Build|WPILib Headers|Version'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      # Download artifacts from build workflow
      - name: Download workflow artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          commit: ${{ github.sha }}
          path: '.'

      # Get publish.gradle version
      - name: Get publish.gradle version
        id: get-version
        run: |
          echo "version=$(cat version/version.txt)" >> $GITHUB_OUTPUT
          echo "expectedTagName=v$(cat version/version.txt)" >> $GITHUB_OUTPUT

  # Creates a release draft with the artifacts from the build workflow
  prepare-release:
    name: Prepare release
    runs-on: ubuntu-latest
    needs: check-build
    steps:
      # Download API, docs, and version.txt
      - name: Download workflow artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          commit: ${{ github.sha }}
          path: '.'
          skip_unpack: true

      # This step is to check what files are downloaded and how they are structured, as well as binary sizes for releases
      - name: List files
        run: |
          ls -Rlh

      # Create new release draft
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: |
            **/**